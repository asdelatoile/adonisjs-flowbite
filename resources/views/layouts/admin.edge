<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ app.name }}</title>
    @entryPointStyles('app')
    @entryPointScripts('app')
</head>

<body>
    <div class="flex min-h-full">
        <aside
            class="dark bg-gray-800 hidden fixed inset-0 z-20 flex-none w-72 h-full lg:static lg:h-auto lg:overflow-y-visible lg:pt-0 lg:w-48 lg:block"
            aria-label="Sidebar">
            <div class="overflow-y-auto py-4 px-3 bg-gray-50 rounded dark:bg-gray-800">
                <ul class="space-y-2">
                    <li>
                        <a href="#"
                            class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700">
                            <svg class="w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white"
                                fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
                                <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path>
                            </svg>
                            <span class="ml-3">Dashboard</span>
                        </a>
                    </li>
                </ul>
            </div>
        </aside>
        <div class="mx-auto min-h-full w-full p-10">
            @!section('body')
        </div>
    </div>

    @if(flashMessages.has('error'))
    <div id="toast-danger"
        class="transition-opacity duration-500 absolute top-5 right-5 flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800"
        role="alert">
        <div
            class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg dark:bg-red-800 dark:text-red-200">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                    clip-rule="evenodd"></path>
            </svg>
        </div>
        <div class="ml-3 text-sm font-normal">{{ flashMessages.get('error') }}</div>
    </div>
    @endif

    @if(flashMessages.has('success'))
    <div id="toast-success"
        class="transition-opacity duration-500 absolute top-5 right-5 flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800"
        role="alert">
        <div
            class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-500 bg-green-100 rounded-lg dark:bg-green-800 dark:text-green-200">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </div>
        <div class="ml-3 text-sm font-normal">{{ flashMessages.get('success') }}</div>
    </div>
    @endif


    @section('scripts')
    @if(flashMessages.has('error'))
    <script>
        document.addEventListener("DOMContentLoaded", function(event) {
            const targetEl = document.getElementById('toast-danger');
            const options = {
            duration: 500
            };
            const dismiss = new Dismiss(targetEl, options);
            setTimeout(function(){
            dismiss.hide();
            }, 3000);
        }, false);
    </script>
    @endif

    @if(flashMessages.has('success'))
    <script>
        document.addEventListener("DOMContentLoaded", function(event) {
            const targetEl = document.getElementById('toast-success');
            const options = {
            duration: 500
            };
            const dismiss = new Dismiss(targetEl, options);
            setTimeout(function(){
            dismiss.hide();
            }, 3000);
        }, false);
    </script>
    @endif
    @end

</body>

</html>